import time

from helprers import get_api_key
import defines_

from alpha_vantage.timeseries import TimeSeries
import matplotlib.pyplot as plt
import requests
from requests import RequestException

de = defines_.Defines()


class TickersMainScraper:
    """
    Class TickersMainScraper use Alpha Vantage API to handle different stocks info
     from exchange markets all around the world.
     This API is a free version, so keep in mind that it has only 25 requests by day.
    """

    def __init__(self):
        self.__api_kay = get_api_key(de.api_key_file)
        self.__ts = TimeSeries(key=self.__api_kay, output_format='pandas')
        self.ticker_container = []
        self.company_info_from_different_exchanges = {}

        self.arbitrage = {}

    # first step
    def __fill_ticker_container(self, needed_20_positions):
        conf_url = f'{de.gs_ls_most_act_url}{self.__api_kay}'
        try:
            response = requests.get(conf_url)
            data = response.json()
            key = de.gs_ls_most_act[needed_20_positions] if needed_20_positions in de.gs_ls_most_act else 'most_actively_traded'
            self.ticker_container = [ticker['ticker'] for ticker in data[key]]
        except RequestException as e:
            print(f"Exception was occurred: {e}")

    # second step:
    def __find_best_matches(self, company_or_ticker_search=None):
        url = f'{de.best_matches_url}{self.__api_kay}'

        if company_or_ticker_search:
            tickers_to_search = [company_or_ticker_search]
        else:
            tickers_to_search = self.ticker_container

        for ticker in tickers_to_search:
            params = {
                "function": "SYMBOL_SEARCH",
                "keywords": ticker,
                "apikey": self.__api_kay,
                "datatype": "json"
            }
            try:
                response = requests.get(url, params=params)
                data = response.json()

                self.company_info_from_different_exchanges[ticker] = []

                for match in data['bestMatches']:
                    info = {
                        'symbol': match.get('1. symbol', ''),
                        'name': match.get('2. name', ''),
                        'timezone': match.get('7. timezone', ''),
                        'currency': match.get('8. currency', '')
                    }
                    # print(info)
                    self.company_info_from_different_exchanges[ticker].append(info)

            except RequestException as e:
                print(f"Error war occurred: {e}")

# third step (search daily info for all companies)
    def __last_close_info(self):
        for info in self.company_info_from_different_exchanges.values():
            for el in info:
                print(el)
                symbol = el.get('symbol')
                print(symbol)
                url = f'{de.time_daily_info_url}{symbol}&interval=5min&apikey={self.__api_kay}'
                try:
                    response = requests.get(url)
                    data = response.json()
                    time_series = data.get("Time Series (5min)", {})

                    close_data = {}
                    for exch_time, values in time_series.items():
                        date, exch_time = exch_time.split(" ")
                        if date not in close_data:
                            close_data[date] = {}
                        close_data[date][exch_time] = values.get("4. close")

                    el["daily_info"] = close_data  # Corrected line

                except RequestException as e:
                    print(f"Error occurred while fetching last close info: {e}")

    def __collect_sequentially_info(self):
        type_of_market_position = input("Choose between - Top gainers, losers, and most actively traded US tickers:"
                                        "\nInsert:\ngainers, losers or most-actives\n")
        self.__fill_ticker_container(type_of_market_position)
        print(self.ticker_container)
        time.sleep(3)
        symbol = input("Choose your symbol: ")
        self.__find_best_matches(symbol)

        print(self.company_info_from_different_exchanges)
        self.__last_close_info()



    def print_data(self):
        self.__collect_sequentially_info()
        print(self.company_info_from_different_exchanges)


if __name__ == "__main__":
    test_dict = {'tesla': [{'symbol': 'TSLA', 'name': 'Tesla Inc', 'timezone': 'UTC-04', 'currency': 'USD',
                            'daily_info': {
                                '2023-11-17': {'19:55:00': '153.0800', '19:40:00': '152.9800', '19:25:00': '152.8800',
                                               '19:20:00': '152.9700', '19:15:00': '153.0900', '19:10:00': '152.7300',
                                               '19:00:00': '152.8900', '18:45:00': '152.7300', '18:40:00': '152.7300',
                                               '18:35:00': '152.7300', '18:30:00': '152.7300', '18:25:00': '152.7300',
                                               '18:10:00': '153.0800', '18:05:00': '152.7300', '18:00:00': '152.7300',
                                               '17:55:00': '152.7300', '17:50:00': '152.7300', '17:45:00': '152.7300',
                                               '17:40:00': '152.7300', '17:35:00': '152.7300', '17:30:00': '152.7300',
                                               '17:25:00': '152.7300', '17:20:00': '153.0800', '17:15:00': '153.0800',
                                               '17:10:00': '152.8800', '17:05:00': '153.0000', '17:00:00': '152.7300',
                                               '16:55:00': '152.7300', '16:50:00': '153.0800', '16:45:00': '152.7300',
                                               '16:40:00': '152.8800', '16:35:00': '152.7300', '16:30:00': '152.7300',
                                               '16:25:00': '152.7300', '16:20:00': '152.7300', '16:15:00': '153.0890',
                                               '16:10:00': '152.9200', '16:05:00': '152.8900', '16:00:00': '152.9300',
                                               '15:55:00': '152.9100', '15:50:00': '153.0500', '15:45:00': '153.0400',
                                               '15:40:00': '153.0400', '15:35:00': '153.0100', '15:30:00': '153.0600',
                                               '15:25:00': '153.2100', '15:20:00': '153.1000', '15:15:00': '153.1100',
                                               '15:10:00': '153.0500', '15:05:00': '153.0510', '15:00:00': '153.0700',
                                               '14:55:00': '153.1200', '14:50:00': '153.1050', '14:45:00': '153.1700',
                                               '14:40:00': '153.2200', '14:35:00': '153.2100', '14:30:00': '153.2200',
                                               '14:25:00': '153.3000', '14:20:00': '153.3100', '14:15:00': '153.3400',
                                               '14:10:00': '153.3500', '14:05:00': '153.3800', '14:00:00': '153.3100',
                                               '13:55:00': '153.3500', '13:50:00': '153.4200', '13:45:00': '153.3700',
                                               '13:40:00': '153.3700', '13:35:00': '153.2950', '13:30:00': '153.1800',
                                               '13:25:00': '153.1740', '13:20:00': '153.2100', '13:15:00': '153.2150',
                                               '13:10:00': '153.0800', '13:05:00': '153.1750', '13:00:00': '153.1730',
                                               '12:55:00': '153.2150', '12:50:00': '153.2750', '12:45:00': '153.2900',
                                               '12:40:00': '153.1950', '12:35:00': '153.1500', '12:30:00': '153.1400',
                                               '12:25:00': '153.0500', '12:20:00': '153.0400', '12:15:00': '153.1000',
                                               '12:10:00': '153.0990', '12:05:00': '153.0300', '12:00:00': '153.0400',
                                               '11:55:00': '153.0000', '11:50:00': '153.0250', '11:45:00': '153.0750',
                                               '11:40:00': '153.0850', '11:35:00': '153.1100', '11:30:00': '152.8500',
                                               '11:25:00': '153.0000', '11:20:00': '153.0100', '11:15:00': '152.8500',
                                               '11:10:00': '152.7500', '11:05:00': '152.6400', '11:00:00': '152.6500',
                                               '10:55:00': '152.6200'}}},
                           {'symbol': 'TL0.DEX', 'name': 'Tesla Inc', 'timezone': 'UTC+02', 'currency': 'EUR',
                            'daily_info': {
                                '2023-11-17': {'19:55:00': '153.0800', '19:40:00': '152.9800', '19:25:00': '152.8800',
                                               '19:20:00': '152.9700', '19:15:00': '153.0900', '19:10:00': '152.7300',
                                               '19:00:00': '152.8900', '18:45:00': '152.7300', '18:40:00': '152.7300',
                                               '18:35:00': '152.7300', '18:30:00': '152.7300', '18:25:00': '152.7300',
                                               '18:10:00': '153.0800', '18:05:00': '152.7300', '18:00:00': '152.7300',
                                               '17:55:00': '152.7300', '17:50:00': '152.7300', '17:45:00': '152.7300',
                                               '17:40:00': '152.7300', '17:35:00': '152.7300', '17:30:00': '152.7300',
                                               '17:25:00': '152.7300', '17:20:00': '153.0800', '17:15:00': '153.0800',
                                               '17:10:00': '152.8800', '17:05:00': '153.0000', '17:00:00': '152.7300',
                                               '16:55:00': '152.7300', '16:50:00': '153.0800', '16:45:00': '152.7300',
                                               '16:40:00': '152.8800', '16:35:00': '152.7300', '16:30:00': '152.7300',
                                               '16:25:00': '152.7300', '16:20:00': '152.7300', '16:15:00': '153.0890',
                                               '16:10:00': '152.9200', '16:05:00': '152.8900', '16:00:00': '152.9300',
                                               '15:55:00': '152.9100', '15:50:00': '153.0500', '15:45:00': '153.0400',
                                               '15:40:00': '153.0400', '15:35:00': '153.0100', '15:30:00': '153.0600',
                                               '15:25:00': '153.2100', '15:20:00': '153.1000', '15:15:00': '153.1100',
                                               '15:10:00': '153.0500', '15:05:00': '153.0510', '15:00:00': '153.0700',
                                               '14:55:00': '153.1200', '14:50:00': '153.1050', '14:45:00': '153.1700',
                                               '14:40:00': '153.2200', '14:35:00': '153.2100', '14:30:00': '153.2200',
                                               '14:25:00': '153.3000', '14:20:00': '153.3100', '14:15:00': '153.3400',
                                               '14:10:00': '153.3500', '14:05:00': '153.3800', '14:00:00': '153.3100',
                                               '13:55:00': '153.3500', '13:50:00': '153.4200', '13:45:00': '153.3700',
                                               '13:40:00': '153.3700', '13:35:00': '153.2950', '13:30:00': '153.1800',
                                               '13:25:00': '153.1740', '13:20:00': '153.2100', '13:15:00': '153.2150',
                                               '13:10:00': '153.0800', '13:05:00': '153.1750', '13:00:00': '153.1730',
                                               '12:55:00': '153.2150', '12:50:00': '153.2750', '12:45:00': '153.2900',
                                               '12:40:00': '153.1950', '12:35:00': '153.1500', '12:30:00': '153.1400',
                                               '12:25:00': '153.0500', '12:20:00': '153.0400', '12:15:00': '153.1000',
                                               '12:10:00': '153.0990', '12:05:00': '153.0300', '12:00:00': '153.0400',
                                               '11:55:00': '153.0000', '11:50:00': '153.0250', '11:45:00': '153.0750',
                                               '11:40:00': '153.0850', '11:35:00': '153.1100', '11:30:00': '152.8500',
                                               '11:25:00': '153.0000', '11:20:00': '153.0100', '11:15:00': '152.8500',
                                               '11:10:00': '152.7500', '11:05:00': '152.6400', '11:00:00': '152.6500',
                                               '10:55:00': '152.6200'}}},
                           {'symbol': 'TL0.FRK', 'name': 'Tesla Inc', 'timezone': 'UTC+02', 'currency': 'EUR',
                            'daily_info': {
                                '2023-11-17': {'19:55:00': '153.0800', '19:40:00': '152.9800', '19:25:00': '152.8800',
                                               '19:20:00': '152.9700', '19:15:00': '153.0900', '19:10:00': '152.7300',
                                               '19:00:00': '152.8900', '18:45:00': '152.7300', '18:40:00': '152.7300',
                                               '18:35:00': '152.7300', '18:30:00': '152.7300', '18:25:00': '152.7300',
                                               '18:10:00': '153.0800', '18:05:00': '152.7300', '18:00:00': '152.7300',
                                               '17:55:00': '152.7300', '17:50:00': '152.7300', '17:45:00': '152.7300',
                                               '17:40:00': '152.7300', '17:35:00': '152.7300', '17:30:00': '152.7300',
                                               '17:25:00': '152.7300', '17:20:00': '153.0800', '17:15:00': '153.0800',
                                               '17:10:00': '152.8800', '17:05:00': '153.0000', '17:00:00': '152.7300',
                                               '16:55:00': '152.7300', '16:50:00': '153.0800', '16:45:00': '152.7300',
                                               '16:40:00': '152.8800', '16:35:00': '152.7300', '16:30:00': '152.7300',
                                               '16:25:00': '152.7300', '16:20:00': '152.7300', '16:15:00': '153.0890',
                                               '16:10:00': '152.9200', '16:05:00': '152.8900', '16:00:00': '152.9300',
                                               '15:55:00': '152.9100', '15:50:00': '153.0500', '15:45:00': '153.0400',
                                               '15:40:00': '153.0400', '15:35:00': '153.0100', '15:30:00': '153.0600',
                                               '15:25:00': '153.2100', '15:20:00': '153.1000', '15:15:00': '153.1100',
                                               '15:10:00': '153.0500', '15:05:00': '153.0510', '15:00:00': '153.0700',
                                               '14:55:00': '153.1200', '14:50:00': '153.1050', '14:45:00': '153.1700',
                                               '14:40:00': '153.2200', '14:35:00': '153.2100', '14:30:00': '153.2200',
                                               '14:25:00': '153.3000', '14:20:00': '153.3100', '14:15:00': '153.3400',
                                               '14:10:00': '153.3500', '14:05:00': '153.3800', '14:00:00': '153.3100',
                                               '13:55:00': '153.3500', '13:50:00': '153.4200', '13:45:00': '153.3700',
                                               '13:40:00': '153.3700', '13:35:00': '153.2950', '13:30:00': '153.1800',
                                               '13:25:00': '153.1740', '13:20:00': '153.2100', '13:15:00': '153.2150',
                                               '13:10:00': '153.0800', '13:05:00': '153.1750', '13:00:00': '153.1730',
                                               '12:55:00': '153.2150', '12:50:00': '153.2750', '12:45:00': '153.2900',
                                               '12:40:00': '153.1950', '12:35:00': '153.1500', '12:30:00': '153.1400',
                                               '12:25:00': '153.0500', '12:20:00': '153.0400', '12:15:00': '153.1000',
                                               '12:10:00': '153.0990', '12:05:00': '153.0300', '12:00:00': '153.0400',
                                               '11:55:00': '153.0000', '11:50:00': '153.0250', '11:45:00': '153.0750',
                                               '11:40:00': '153.0850', '11:35:00': '153.1100', '11:30:00': '152.8500',
                                               '11:25:00': '153.0000', '11:20:00': '153.0100', '11:15:00': '152.8500',
                                               '11:10:00': '152.7500', '11:05:00': '152.6400', '11:00:00': '152.6500',
                                               '10:55:00': '152.6200'}}},
                           {'symbol': 'TSLA34.SAO', 'name': 'Tesla Inc', 'timezone': 'UTC-03', 'currency': 'BRL',
                            'daily_info': {
                                '2023-11-17': {'19:55:00': '153.0800', '19:40:00': '152.9800', '19:25:00': '152.8800',
                                               '19:20:00': '152.9700', '19:15:00': '153.0900', '19:10:00': '152.7300',
                                               '19:00:00': '152.8900', '18:45:00': '152.7300', '18:40:00': '152.7300',
                                               '18:35:00': '152.7300', '18:30:00': '152.7300', '18:25:00': '152.7300',
                                               '18:10:00': '153.0800', '18:05:00': '152.7300', '18:00:00': '152.7300',
                                               '17:55:00': '152.7300', '17:50:00': '152.7300', '17:45:00': '152.7300',
                                               '17:40:00': '152.7300', '17:35:00': '152.7300', '17:30:00': '152.7300',
                                               '17:25:00': '152.7300', '17:20:00': '153.0800', '17:15:00': '153.0800',
                                               '17:10:00': '152.8800', '17:05:00': '153.0000', '17:00:00': '152.7300',
                                               '16:55:00': '152.7300', '16:50:00': '153.0800', '16:45:00': '152.7300',
                                               '16:40:00': '152.8800', '16:35:00': '152.7300', '16:30:00': '152.7300',
                                               '16:25:00': '152.7300', '16:20:00': '152.7300', '16:15:00': '153.0890',
                                               '16:10:00': '152.9200', '16:05:00': '152.8900', '16:00:00': '152.9300',
                                               '15:55:00': '152.9100', '15:50:00': '153.0500', '15:45:00': '153.0400',
                                               '15:40:00': '153.0400', '15:35:00': '153.0100', '15:30:00': '153.0600',
                                               '15:25:00': '153.2100', '15:20:00': '153.1000', '15:15:00': '153.1100',
                                               '15:10:00': '153.0500', '15:05:00': '153.0510', '15:00:00': '153.0700',
                                               '14:55:00': '153.1200', '14:50:00': '153.1050', '14:45:00': '153.1700',
                                               '14:40:00': '153.2200', '14:35:00': '153.2100', '14:30:00': '153.2200',
                                               '14:25:00': '153.3000', '14:20:00': '153.3100', '14:15:00': '153.3400',
                                               '14:10:00': '153.3500', '14:05:00': '153.3800', '14:00:00': '153.3100',
                                               '13:55:00': '153.3500', '13:50:00': '153.4200', '13:45:00': '153.3700',
                                               '13:40:00': '153.3700', '13:35:00': '153.2950', '13:30:00': '153.1800',
                                               '13:25:00': '153.1740', '13:20:00': '153.2100', '13:15:00': '153.2150',
                                               '13:10:00': '153.0800', '13:05:00': '153.1750', '13:00:00': '153.1730',
                                               '12:55:00': '153.2150', '12:50:00': '153.2750', '12:45:00': '153.2900',
                                               '12:40:00': '153.1950', '12:35:00': '153.1500', '12:30:00': '153.1400',
                                               '12:25:00': '153.0500', '12:20:00': '153.0400', '12:15:00': '153.1000',
                                               '12:10:00': '153.0990', '12:05:00': '153.0300', '12:00:00': '153.0400',
                                               '11:55:00': '153.0000', '11:50:00': '153.0250', '11:45:00': '153.0750',
                                               '11:40:00': '153.0850', '11:35:00': '153.1100', '11:30:00': '152.8500',
                                               '11:25:00': '153.0000', '11:20:00': '153.0100', '11:15:00': '152.8500',
                                               '11:10:00': '152.7500', '11:05:00': '152.6400', '11:00:00': '152.6500',
                                               '10:55:00': '152.6200'}}},
                           {'symbol': 'TL01.FRK', 'name': 'TESLA INC. CDR DL-001', 'timezone': 'UTC+02',
                            'currency': 'EUR', 'daily_info': {
                               '2023-11-17': {'19:55:00': '153.0800', '19:40:00': '152.9800', '19:25:00': '152.8800',
                                              '19:20:00': '152.9700', '19:15:00': '153.0900', '19:10:00': '152.7300',
                                              '19:00:00': '152.8900', '18:45:00': '152.7300', '18:40:00': '152.7300',
                                              '18:35:00': '152.7300', '18:30:00': '152.7300', '18:25:00': '152.7300',
                                              '18:10:00': '153.0800', '18:05:00': '152.7300', '18:00:00': '152.7300',
                                              '17:55:00': '152.7300', '17:50:00': '152.7300', '17:45:00': '152.7300',
                                              '17:40:00': '152.7300', '17:35:00': '152.7300', '17:30:00': '152.7300',
                                              '17:25:00': '152.7300', '17:20:00': '153.0800', '17:15:00': '153.0800',
                                              '17:10:00': '152.8800', '17:05:00': '153.0000', '17:00:00': '152.7300',
                                              '16:55:00': '152.7300', '16:50:00': '153.0800', '16:45:00': '152.7300',
                                              '16:40:00': '152.8800', '16:35:00': '152.7300', '16:30:00': '152.7300',
                                              '16:25:00': '152.7300', '16:20:00': '152.7300', '16:15:00': '153.0890',
                                              '16:10:00': '152.9200', '16:05:00': '152.8900', '16:00:00': '152.9300',
                                              '15:55:00': '152.9100', '15:50:00': '153.0500', '15:45:00': '153.0400',
                                              '15:40:00': '153.0400', '15:35:00': '153.0100', '15:30:00': '153.0600',
                                              '15:25:00': '153.2100', '15:20:00': '153.1000', '15:15:00': '153.1100',
                                              '15:10:00': '153.0500', '15:05:00': '153.0510', '15:00:00': '153.0700',
                                              '14:55:00': '153.1200', '14:50:00': '153.1050', '14:45:00': '153.1700',
                                              '14:40:00': '153.2200', '14:35:00': '153.2100', '14:30:00': '153.2200',
                                              '14:25:00': '153.3000', '14:20:00': '153.3100', '14:15:00': '153.3400',
                                              '14:10:00': '153.3500', '14:05:00': '153.3800', '14:00:00': '153.3100',
                                              '13:55:00': '153.3500', '13:50:00': '153.4200', '13:45:00': '153.3700',
                                              '13:40:00': '153.3700', '13:35:00': '153.2950', '13:30:00': '153.1800',
                                              '13:25:00': '153.1740', '13:20:00': '153.2100', '13:15:00': '153.2150',
                                              '13:10:00': '153.0800', '13:05:00': '153.1750', '13:00:00': '153.1730',
                                              '12:55:00': '153.2150', '12:50:00': '153.2750', '12:45:00': '153.2900',
                                              '12:40:00': '153.1950', '12:35:00': '153.1500', '12:30:00': '153.1400',
                                              '12:25:00': '153.0500', '12:20:00': '153.0400', '12:15:00': '153.1000',
                                              '12:10:00': '153.0990', '12:05:00': '153.0300', '12:00:00': '153.0400',
                                              '11:55:00': '153.0000', '11:50:00': '153.0250', '11:45:00': '153.0750',
                                              '11:40:00': '153.0850', '11:35:00': '153.1100', '11:30:00': '152.8500',
                                              '11:25:00': '153.0000', '11:20:00': '153.0100', '11:15:00': '152.8500',
                                              '11:10:00': '152.7500', '11:05:00': '152.6400', '11:00:00': '152.6500',
                                              '10:55:00': '152.6200'}}}]}

    # prime_time_zone = 'UTC-04'
    # for list_with_info in test_dict.values():
    #     for company in list_with_info:
    #         print(company)
    url = 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=TSLAinterval=5min&apikey=T2RPXU9Z7B11EIAT'
    r = requests.get(url)
    data = r.json()
    print(data)
    # tickers_scr = TickersMainScraper()
    # tickers_scr.print_data()